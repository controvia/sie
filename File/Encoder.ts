export class Encoder {
	constructor(readonly encoding: Encoder.Encoding) {}
	encode(data: string): Uint8Array {
		const mapping = Encoder.mappings[this.encoding].encode
		return new Uint8Array(
			[...data].map(c => {
				const result = c.charCodeAt(0)
				return mapping[result] ?? result
			})
		)
	}
	decode(buffer: Uint8Array): string {
		const mapping = Encoder.mappings[this.encoding].decode
		return [...buffer].map(c => mapping[c] ?? String.fromCharCode(c)).join("")
	}
	private static readonly mappings: Record<
		Encoder.Encoding,
		{ encode: Record<string, number>; decode: Record<number, string> }
	> = {
		cp437: {
			encode: {
				Ç: 128,
				ü: 129,
				é: 130,
				â: 131,
				ä: 132,
				à: 133,
				å: 134,
				ç: 135,
				ê: 136,
				ë: 137,
				è: 138,
				ï: 139,
				î: 140,
				ì: 141,
				Ä: 142,
				Å: 143,
				É: 144,
				æ: 145,
				Æ: 146,
				ô: 147,
				ö: 148,
				ò: 149,
				û: 150,
				ù: 151,
				ÿ: 152,
				Ö: 153,
				Ü: 154,
				"¢": 155,
				"£": 156,
				"¥": 157,
				"₧": 158,
				ƒ: 159,
				á: 160,
				í: 161,
				ó: 162,
				ú: 163,
				ñ: 164,
				Ñ: 165,
				ª: 166,
				º: 167,
				"¿": 168,
				"⌐": 169,
				"¬": 170,
				"½": 171,
				"¼": 172,
				"¡": 173,
				"«": 174,
				"»": 175,
				"░": 176,
				"▒": 177,
				"▓": 178,
				"│": 179,
				"┤": 180,
				Á: 181,
				Â: 182,
				À: 183,
				"©": 184,
				"╣": 185,
				"║": 186,
				"╗": 187,
				"╝": 188,
				"┐": 191,
				"└": 192,
				"┴": 193,
				"┬": 194,
				"├": 195,
				"─": 196,
				"┼": 197,
				ã: 198,
				Ã: 199,
				"╚": 200,
				"╔": 201,
				"╩": 202,
				"╦": 203,
				"╠": 204,
				"═": 205,
				"╬": 206,
				"¤": 207,
				ð: 208,
				Ð: 209,
				Ê: 210,
				Ë: 211,
				È: 212,
				ı: 213,
				Í: 214,
				Î: 215,
				Ï: 216,
				"┘": 217,
				"┌": 218,
				"█": 219,
				"▄": 220,
				"¦": 221,
				Ì: 222,
				"▀": 223,
				Ó: 224,
				ß: 225,
				Ô: 226,
				Ò: 227,
				õ: 228,
				Õ: 229,
				µ: 230,
				þ: 231,
				Þ: 232,
				Ú: 233,
				Û: 234,
				Ù: 235,
				ý: 236,
				Ý: 237,
				"¯": 238,
				"´": 239,
				"≡": 240,
				"±": 241,
				"‗": 242,
				"¾": 243,
				"¶": 244,
				"§": 245,
				"÷": 246,
				"¸": 247,
				"°": 248,
				"¨": 249,
				"·": 250,
				"¹": 251,
				"³": 252,
				"²": 253,
				"■": 254,
				" ": 255,
			},
			decode: {
				128: "Ç",
				129: "ü",
				130: "é",
				131: "â",
				132: "ä",
				133: "à",
				134: "å",
				135: "ç",
				136: "ê",
				137: "ë",
				138: "è",
				139: "ï",
				140: "î",
				141: "ì",
				142: "Ä",
				143: "Å",
				144: "É",
				145: "æ",
				146: "Æ",
				147: "ô",
				148: "ö",
				149: "ò",
				150: "û",
				151: "ù",
				152: "ÿ",
				153: "Ö",
				154: "Ü",
				155: "¢",
				156: "£",
				157: "¥",
				158: "₧",
				159: "ƒ",
				160: "á",
				161: "í",
				162: "ó",
				163: "ú",
				164: "ñ",
				165: "Ñ",
				166: "ª",
				167: "º",
				168: "¿",
				169: "⌐",
				170: "¬",
				171: "½",
				172: "¼",
				173: "¡",
				174: "«",
				175: "»",
				176: "░",
				177: "▒",
				178: "▓",
				179: "│",
				180: "┤",
				181: "Á",
				182: "Â",
				183: "À",
				184: "©",
				185: "╣",
				186: "║",
				187: "╗",
				188: "╝",
				189: "¢",
				190: "¥",
				191: "┐",
				192: "└",
				193: "┴",
				194: "", //"┬",
				195: "├",
				196: "─",
				197: "┼",
				198: "ã",
				199: "Ã",
				200: "╚",
				201: "╔",
				202: "╩",
				203: "╦",
				204: "╠",
				205: "═",
				206: "╬",
				207: "¤",
				208: "ð",
				209: "Ð",
				210: "Ê",
				211: "Ë",
				212: "È",
				213: "ı",
				214: "Í",
				215: "Î",
				216: "Ï",
				217: "┘",
				218: "┌",
				219: "█",
				220: "▄",
				221: "¦",
				222: "Ì",
				223: "▀",
				224: "Ó",
				225: "ß",
				226: "Ô",
				227: "Ò",
				228: "õ",
				229: "Õ",
				230: "µ",
				231: "þ",
				232: "Þ",
				233: "Ú",
				234: "Û",
				235: "Ù",
				236: "ý",
				237: "Ý",
				238: "¯",
				239: "´",
				240: "≡",
				241: "±",
				242: "‗",
				243: "¾",
				244: "¶",
				245: "§",
				246: "÷",
				247: "¸",
				248: "°",
				249: "¨",
				250: "·",
				251: "¹",
				252: "³",
				253: "²",
				254: "■",
				255: " ",
			},
		},
	}
}
export namespace Encoder {
	export type Encoding = "cp437"
}
